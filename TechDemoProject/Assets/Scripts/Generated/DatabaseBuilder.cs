// <auto-generated />
#pragma warning disable CS0105
using MasterMemory.Validation;
using MasterMemory;
using MessagePack;
using System.Collections.Generic;
using System;
using Tech.Data.DB;
using Tech.DB;
using MasterData.Tables;

namespace MasterData
{
   public sealed class DatabaseBuilder : DatabaseBuilderBase
   {
        public DatabaseBuilder() : this(null) { }
        public DatabaseBuilder(MessagePack.IFormatterResolver resolver) : base(resolver) { }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<Ability> dataSource)
        {
            AppendCore(dataSource, x => x.Name, System.StringComparer.Ordinal);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<Enemy> dataSource)
        {
            AppendCore(dataSource, x => x.Name, System.StringComparer.Ordinal);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<Equipment> dataSource)
        {
            AppendCore(dataSource, x => x.Name, System.StringComparer.Ordinal);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<Item> dataSource)
        {
            AppendCore(dataSource, x => x.Name, System.StringComparer.Ordinal);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<Nill> dataSource)
        {
            AppendCore(dataSource, x => x.Name, System.StringComparer.Ordinal);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<Skill> dataSource)
        {
            AppendCore(dataSource, x => x.Name, System.StringComparer.Ordinal);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<TechMaterial> dataSource)
        {
            AppendCore(dataSource, x => x.Name, System.StringComparer.Ordinal);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<Unit> dataSource)
        {
            AppendCore(dataSource, x => x.Name, System.StringComparer.Ordinal);
            return this;
        }

        public DatabaseBuilder Append(System.Collections.Generic.IEnumerable<Weapon> dataSource)
        {
            AppendCore(dataSource, x => x.Name, System.StringComparer.Ordinal);
            return this;
        }

    }
}